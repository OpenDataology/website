<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenDataology â€“ OpenDataology Notebooks</title>
    <link>/docs/components/notebooks/</link>
    <description>Recent content in OpenDataology Notebooks on OpenDataology</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/components/notebooks/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Overview</title>
      <link>/docs/components/notebooks/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/notebooks/overview/</guid>
      <description>
        
        
        &lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
This OpenDataology component has &lt;b&gt;stable&lt;/b&gt; status. See the
&lt;a href=&#34;/docs/started/support/#application-status&#34;&gt;OpenDataology versioning policies&lt;/a&gt;.
&lt;/div&gt;
&lt;h2 id=&#34;what-is-opendataology-notebooks&#34;&gt;What is OpenDataology Notebooks?&lt;/h2&gt;
&lt;p&gt;OpenDataology Notebooks provides a way to run web-based development environments inside your Kubernetes cluster by running them inside Pods.&lt;/p&gt;
&lt;p&gt;Some key features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Native support for &lt;a href=&#34;https://github.com/jupyterlab/jupyterlab&#34;&gt;JupyterLab&lt;/a&gt;, &lt;a href=&#34;https://github.com/jupyterlab/jupyterlab&#34;&gt;RStudio&lt;/a&gt;, and &lt;a href=&#34;https://github.com/cdr/code-server&#34;&gt;Visual Studio Code (code-server)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Users can create notebook containers directly in the cluster, rather than locally on their workstations.&lt;/li&gt;
&lt;li&gt;Admins can provide standard notebook images for their organization with required packages pre-installed.&lt;/li&gt;
&lt;li&gt;Access control is managed by OpenDataology&amp;rsquo;s RBAC, enabling easier notebook sharing across the organization.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Get started with OpenDataology Notebooks using the &lt;a href=&#34;/docs/components/notebooks/quickstart-guide/&#34;&gt;quickstart guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Learn how to create your own &lt;a href=&#34;/docs/components/notebooks/container-images/&#34;&gt;container images&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Quickstart Guide</title>
      <link>/docs/components/notebooks/quickstart-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/notebooks/quickstart-guide/</guid>
      <description>
        
        
        &lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install OpenDataology by following &lt;a href=&#34;/docs/started/installing-OpenDataology/&#34;&gt;Getting Started - Installing OpenDataology&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Open the OpenDataology &lt;a href=&#34;/docs/components/central-dash/&#34;&gt;Central Dashboard&lt;/a&gt; in your browser.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;&amp;ldquo;Notebooks&amp;rdquo;&lt;/strong&gt; in the left-hand panel.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;&amp;ldquo;New Server&amp;rdquo;&lt;/strong&gt; to create a new notebook server.&lt;/li&gt;
&lt;li&gt;Specify the configs for your notebook server.&lt;/li&gt;
&lt;li&gt;Click  &lt;strong&gt;&amp;ldquo;CONNECT&amp;rdquo;&lt;/strong&gt; once the notebook has been provisioned&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;detailed-steps&#34;&gt;Detailed Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the OpenDataology &lt;a href=&#34;/docs/components/central-dash/&#34;&gt;Central Dashboard&lt;/a&gt; in your browser.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select a Namespace:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click the namespace dropdown to see the list of available namespaces.&lt;/li&gt;
&lt;li&gt;Choose the namespace that corresponds to your OpenDataology Profile.
(See the page on &lt;a href=&#34;/docs/components/multi-tenancy/&#34;&gt;multi-user isolation&lt;/a&gt; for more information about Profiles.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/docs/images/notebooks-namespace.png&#34;
alt=&#34;Selecting a OpenDataology namespace&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;&amp;ldquo;Notebook Servers&amp;rdquo;&lt;/strong&gt; in the left-hand panel:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/docs/images/jupyterlink.png&#34;
alt=&#34;Opening notebooks from the OpenDataology UI&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;&amp;ldquo;New Server&amp;rdquo;&lt;/strong&gt; on the &lt;strong&gt;&amp;ldquo;Notebook Servers&amp;rdquo;&lt;/strong&gt; page:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/docs/images/add-notebook-server.png&#34;
alt=&#34;The OpenDataology notebook servers page&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter a &lt;strong&gt;&amp;ldquo;Name&amp;rdquo;&lt;/strong&gt; for your notebook server.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The name can include letters and numbers, but no spaces.&lt;/li&gt;
&lt;li&gt;For example, &lt;code&gt;my-first-notebook&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/docs/images/new-notebook-server.png&#34;
alt=&#34;Form for adding a OpenDataology notebook server&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select a Docker &lt;strong&gt;&amp;ldquo;Image&amp;rdquo;&lt;/strong&gt; for your notebook server&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom image&lt;/strong&gt;: If you select the custom option, you must specify a Docker image in  the form &lt;code&gt;registry/image:tag&lt;/code&gt;.
(See the guide on &lt;a href=&#34;/docs/components/notebooks/container-images/&#34;&gt;container images&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Standard image&lt;/strong&gt;: Click the &lt;strong&gt;&amp;ldquo;Image&amp;rdquo;&lt;/strong&gt; dropdown menu to see the list of available images.
(You can choose from the list configured by your OpenDataology administrator)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specify the amount of &lt;strong&gt;&amp;ldquo;CPU&amp;rdquo;&lt;/strong&gt; that your notebook server will request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specify the amount of &lt;strong&gt;&amp;ldquo;RAM&amp;rdquo;&lt;/strong&gt; that your notebook server will request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specify a &lt;strong&gt;&amp;ldquo;workspace volume&amp;rdquo;&lt;/strong&gt; to be mounted as a PVC Volume on your home folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;(Optional)&lt;/em&gt; Specify one or more &lt;strong&gt;&amp;ldquo;data volumes&amp;rdquo;&lt;/strong&gt; to be mounted as a PVC Volumes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;(Optional)&lt;/em&gt; Specify one or more additional &lt;strong&gt;&amp;ldquo;configurations&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;These correspond to &lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/blob/master/components/admission-webhook/README.md&#34;&gt;PodDefault resources&lt;/a&gt; which exit in your profile namespace.&lt;/li&gt;
&lt;li&gt;OpenDataology matches the labels in the &lt;strong&gt;&amp;ldquo;configurations&amp;rdquo;&lt;/strong&gt; field against the properties specified in the PodDefault manifest.&lt;/li&gt;
&lt;li&gt;For example, select the label &lt;code&gt;add-gcp-secret&lt;/code&gt; in the &lt;strong&gt;&amp;ldquo;configurations&amp;rdquo;&lt;/strong&gt; field to match to a PodDefault manifest containing the following configuration:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;OpenDataology.org/v1alpha1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PodDefault&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;add-gcp-secret&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;namespace&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_PROFILE_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;matchLabels&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;add-gcp-secret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;desc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;add gcp credential&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;volumeMounts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;secret-volume&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;mountPath&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/secret/gcp&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;secret-volume&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;secretName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gcp-secret&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;(Optional)&lt;/em&gt; Specify any &lt;strong&gt;&amp;ldquo;GPUs&amp;rdquo;&lt;/strong&gt; that your notebook server will request.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenDataology uses &amp;ldquo;limits&amp;rdquo; in Pod requests to provision GPUs onto the notebook Pods
(Details about scheduling GPUs can be found in the &lt;a href=&#34;https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/&#34;&gt;Kubernetes Documentation&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;(Optional)&lt;/em&gt; Specify the setting for &lt;strong&gt;&amp;ldquo;enable shared memory&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some libraries like PyTorch use shared memory for multiprocessing.&lt;/li&gt;
&lt;li&gt;Currently, there is no implementation in Kubernetes to activate shared memory.&lt;/li&gt;
&lt;li&gt;As a workaround, OpenDataology mounts an empty directory volume at &lt;code&gt;/dev/shm&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;&amp;ldquo;LAUNCH&amp;rdquo;&lt;/strong&gt; to create a new Notebook CRD with your specified settings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You should see an entry for your new notebook server on the &lt;strong&gt;&amp;ldquo;Notebook Servers&amp;rdquo;&lt;/strong&gt; page&lt;/li&gt;
&lt;li&gt;There should be a spinning indicator in the &lt;strong&gt;&amp;ldquo;Status&amp;rdquo;&lt;/strong&gt; column.&lt;/li&gt;
&lt;li&gt;It can take a few minutes for kubernetes to provision the notebook server pod.&lt;/li&gt;
&lt;li&gt;You can check the status of your Pod by hovering your mouse cursor over the icon in the &lt;strong&gt;&amp;ldquo;Status&amp;rdquo;&lt;/strong&gt; column.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;&amp;ldquo;CONNECT&amp;rdquo;&lt;/strong&gt; to view the web interface exposed by your notebook server.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/docs/images/notebook-servers.png&#34;
alt=&#34;Opening notebooks from the OpenDataology UI&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Learn how to create your own &lt;a href=&#34;/docs/components/notebooks/container-images/&#34;&gt;container images&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Review examples of using &lt;a href=&#34;/docs/components/notebooks/jupyter-tensorflow-examples/&#34;&gt;jupyter and tensorflow&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Visit the &lt;a href=&#34;/docs/components/notebooks/troubleshooting&#34;&gt;troubleshooting guide&lt;/a&gt; to fix common errors.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Container Images</title>
      <link>/docs/components/notebooks/container-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/notebooks/container-images/</guid>
      <description>
        
        
        &lt;p&gt;OpenDataology Notebooks natively supports three types of notebooks, &lt;a href=&#34;https://github.com/jupyterlab/jupyterlab&#34;&gt;JupyterLab&lt;/a&gt;, &lt;a href=&#34;https://github.com/rstudio/rstudio&#34;&gt;RStudio&lt;/a&gt;, and &lt;a href=&#34;https://github.com/cdr/code-server&#34;&gt;Visual Studio Code (code-server)&lt;/a&gt;, but any web-based IDE should work.
Notebook servers run as containers inside a Kubernetes Pod, which means the type of IDE (and which packages are installed) is determined by the Docker image you pick for your server.&lt;/p&gt;
&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;
&lt;p&gt;We provide a number of &lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers&#34;&gt;example container images&lt;/a&gt; to get you started.&lt;/p&gt;
&lt;h3 id=&#34;base-images&#34;&gt;Base Images&lt;/h3&gt;
&lt;p&gt;These images provide a common starting point for OpenDataology Notebook containers.
See &lt;a href=&#34;#custom-images&#34;&gt;custom images&lt;/a&gt; to learn how to extend them with your own packages.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dockerfile&lt;/th&gt;
&lt;th&gt;Registry&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/base&#34;&gt;base&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/base&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/base:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;common base image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/codeserver&#34;&gt;codeserver&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/codeserver&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/codeserver:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;base &lt;a href=&#34;https://github.com/cdr/code-server&#34;&gt;code-server&lt;/a&gt; (Visual Studio Code) image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter&#34;&gt;jupyter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;base &lt;a href=&#34;https://github.com/jupyterlab/jupyterlab&#34;&gt;JupyterLab&lt;/a&gt; image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/rstudio&#34;&gt;rstudio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/rstudio&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/rstudio:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;base &lt;a href=&#34;https://github.com/rstudio/rstudio&#34;&gt;RStudio&lt;/a&gt; image&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;full-images&#34;&gt;Full Images&lt;/h3&gt;
&lt;p&gt;These images extend the &lt;a href=&#34;#base-images&#34;&gt;base images&lt;/a&gt; with common packages used by Data Scientists and ML Engineers.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dockerfile&lt;/th&gt;
&lt;th&gt;Registry&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/codeserver-python&#34;&gt;codeserver-python&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/codeserver-python&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/codeserver-python:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;code-server (Visual Studio Code) + Conda Python&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-pytorch&#34;&gt;jupyter-pytorch (CPU)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + PyTorch (CPU)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-pytorch&#34;&gt;jupyter-pytorch (CUDA)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-cuda&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-cuda:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + PyTorch (CUDA)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-pytorch-full&#34;&gt;jupyter-pytorch-full (CPU)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-full&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-full:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + PyTorch (CPU) + &lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-pytorch-full/requirements.txt&#34;&gt;common&lt;/a&gt; packages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-pytorch-full&#34;&gt;jupyter-pytorch-full (CUDA)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-cuda-full&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-cuda-full:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + PyTorch (CUDA) + &lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-pytorch-full/requirements.txt&#34;&gt;common&lt;/a&gt; packages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-scipy&#34;&gt;jupyter-scipy&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-scipy&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-scipy:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + &lt;a href=&#34;https://www.scipy.org/&#34;&gt;SciPy&lt;/a&gt; packages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-tensorflow&#34;&gt;jupyter-tensorflow (CPU)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + TensorFlow (CPU)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-tensorflow&#34;&gt;jupyter-tensorflow (CUDA)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-cuda&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-cuda:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + TensorFlow (CUDA)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-tensorflow-full&#34;&gt;jupyter-tensorflow-full (CPU)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-full&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-full:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + TensorFlow (CPU) + &lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-tensorflow-full/requirements.txt&#34;&gt;common&lt;/a&gt; packages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-tensorflow-full&#34;&gt;jupyter-tensorflow-full (CUDA)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-cuda-full&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-cuda-full:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;JupyterLab + TensorFlow (CUDA) + &lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/jupyter-tensorflow-full/requirements.txt&#34;&gt;common&lt;/a&gt; packages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers/rstudio-tidyverse&#34;&gt;rstudio-tidyverse&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gallery.ecr.aws/j1r0q0g6/notebooks/notebook-servers/rstudio-tidyverse&#34;&gt;&lt;code&gt;public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/rstudio-tidyverse:{TAG}&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;RStudio + &lt;a href=&#34;https://www.tidyverse.org/&#34;&gt;Tidyverse&lt;/a&gt; packages&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;image-dependency-chart&#34;&gt;Image Dependency Chart&lt;/h3&gt;
&lt;p&gt;This flow-chart shows how our notebook container images depend on each other.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/docs/images/notebook-container-image-chart.png&#34; 
alt=&#34;A flow-chart showing how notebook container images depend on each other&#34;  
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;custom-images&#34;&gt;Custom Images&lt;/h2&gt;
&lt;p&gt;Packages installed by users &lt;strong&gt;after spawning&lt;/strong&gt; a OpenDataology Notebook will only last the lifetime of the pod (unless installed into a PVC-backed directory).&lt;/p&gt;
&lt;p&gt;To ensure packages are preserved throughout Pod restarts users will need to either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/OpenDataology/OpenDataology/tree/master/components/example-notebook-servers#custom-images&#34;&gt;Build custom images that include them&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;Ensure they are installed in a PVC-backed directory&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;image-requirements&#34;&gt;Image Requirements&lt;/h3&gt;
&lt;p&gt;For OpenDataology Notebooks to work with a container image, the image must:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;expose an HTTP interface on port &lt;code&gt;8888&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;OpenDataology sets an environment variable &lt;code&gt;NB_PREFIX&lt;/code&gt; at runtime with the URL path we expect the container be listening under&lt;/li&gt;
&lt;li&gt;OpenDataology uses IFrames, so ensure your application sets &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; in HTTP response headers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;run as a user called &lt;code&gt;jovyan&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;the home directory of &lt;code&gt;jovyan&lt;/code&gt; should be &lt;code&gt;/home/jovyan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the UID of &lt;code&gt;jovyan&lt;/code&gt; should be &lt;code&gt;1000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;start successfully with an empty PVC mounted at &lt;code&gt;/home/jovyan&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;OpenDataology mounts a PVC at &lt;code&gt;/home/jovyan&lt;/code&gt; to keep state across Pod restarts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use your container image by specifying it when spawning your notebook server.
(See the &lt;a href=&#34;/docs/components/notebooks/quickstart-guide/&#34;&gt;quickstart guide&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Jupyter TensorFlow Examples</title>
      <link>/docs/components/notebooks/jupyter-tensorflow-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/notebooks/jupyter-tensorflow-examples/</guid>
      <description>
        
        
        &lt;h2 id=&#34;mnist-example&#34;&gt;Mnist Example&lt;/h2&gt;
&lt;p&gt;(adapted from &lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/examples/tutorials/mnist/mnist_softmax.py&#34;&gt;tensorflow/tensorflow - mnist_softmax.py&lt;/a&gt;)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When creating your notebook server choose a &lt;a href=&#34;/docs/components/notebooks/container-images/&#34;&gt;container image&lt;/a&gt; which has Jupyter and TensorFlow installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Jupyter&amp;rsquo;s interface to create a new &lt;strong&gt;Python 3&lt;/strong&gt; notebook.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the following code and paste it into your notebook:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tensorflow.examples.tutorials.mnist&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;input_data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;mnist&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;input_data&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read_data_sets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;MNIST_data/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;one_hot&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tensorflow&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;float32&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;None&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;784&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;W&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Variable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;zeros&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;784&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Variable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;zeros&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nn&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;softmax&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;matmul&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;W&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;y_&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;float32&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;None&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;cross_entropy&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reduce_mean&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reduce_sum&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y_&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reduction_indices&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;train_step&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;train&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GradientDescentOptimizer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0.05&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minimize&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cross_entropy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;sess&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;InteractiveSession&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;global_variables_initializer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;batch_xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;batch_ys&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mnist&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;train&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;next_batch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;sess&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;train_step&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;feed_dict&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;batch_xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y_&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;batch_ys&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;correct_prediction&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;equal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argmax&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argmax&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y_&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;accuracy&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;reduce_mean&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cast&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;correct_prediction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;float32&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Accuracy: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sess&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;accuracy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;feed_dict&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mnist&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;images&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y_&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mnist&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the code. You should see a number of &lt;code&gt;WARNING&lt;/code&gt; messages from TensorFlow, followed by a line showing a training accuracy something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accuracy:  0.9012
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See a &lt;a href=&#34;https://github.com/OpenDataology/examples/tree/master/pipelines/simple-notebook-pipeline&#34;&gt;simple example&lt;/a&gt; of creating OpenDataology pipelines in a Jupyter notebook.&lt;/li&gt;
&lt;li&gt;Build machine-learning pipelines with the &lt;a href=&#34;/docs/components/pipelines/sdk/sdk-overview/&#34;&gt;OpenDataology Pipelines SDK&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Learn the advanced features available from a OpenDataology notebook, such as &lt;a href=&#34;/docs/components/notebooks/submit-kubernetes/&#34;&gt;submitting Kubernetes resources&lt;/a&gt; or &lt;a href=&#34;/docs/components/notebooks/custom-notebook/&#34;&gt;building Docker images&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Submit Kubernetes Resources</title>
      <link>/docs/components/notebooks/submit-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/notebooks/submit-kubernetes/</guid>
      <description>
        
        
        &lt;h2 id=&#34;notebook-pod-serviceaccount&#34;&gt;Notebook Pod ServiceAccount&lt;/h2&gt;
&lt;p&gt;OpenDataology assigns the &lt;code&gt;default-editor&lt;/code&gt; Kubernetes ServiceAccount to the Notebook Pods.
The Kubernetes &lt;code&gt;default-editor&lt;/code&gt; ServiceAccount is bound to the &lt;code&gt;OpenDataology-edit&lt;/code&gt; ClusterRole, which has namespace-scoped permissions to many Kubernetes resources.&lt;/p&gt;
&lt;p&gt;You can get the full list of RBAC for &lt;code&gt;ClusterRole/OpenDataology-edit&lt;/code&gt; using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl describe clusterrole OpenDataology-edit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;kubectl-in-notebook-pod&#34;&gt;Kubectl in Notebook Pod&lt;/h2&gt;
&lt;p&gt;Because every Notebook Pod has the highly-privileged &lt;code&gt;default-editor&lt;/code&gt; Kubernetes ServiceAccount bound to it, you can run &lt;code&gt;kubectl&lt;/code&gt; inside it without providing additional authentication.&lt;/p&gt;
&lt;p&gt;For example, the following command will create the resources defined in &lt;code&gt;test.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create -f &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test.yaml&amp;#34;&lt;/span&gt; --namespace &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;MY_PROFILE_NAMESPACE&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See the OpenDataology Notebook &lt;a href=&#34;/docs/components/notebooks/quickstart-guide/&#34;&gt;quickstart guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Explore the other &lt;a href=&#34;/docs/components/&#34;&gt;components of OpenDataology&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Troubleshooting</title>
      <link>/docs/components/notebooks/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/notebooks/troubleshooting/</guid>
      <description>
        
        
        &lt;h2 id=&#34;issue-notebook-not-starting&#34;&gt;ISSUE: notebook not starting&lt;/h2&gt;
&lt;h3 id=&#34;solution-check-events-of-notebook&#34;&gt;SOLUTION: check events of Notebook&lt;/h3&gt;
&lt;p&gt;Run the following command then check the &lt;code&gt;events&lt;/code&gt; section to make sure that there are no errors:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl describe notebooks &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_NOTEBOOK_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt; --namespace &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_PROFILE_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;solution-check-events-of-pod&#34;&gt;SOLUTION: check events of Pod&lt;/h3&gt;
&lt;p&gt;Run the following command then check the &lt;code&gt;events&lt;/code&gt; section to make sure that there are no errors:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl describe pod &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_NOTEBOOK_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;-0&amp;#34;&lt;/span&gt; --namespace &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_PROFILE_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;solution-check-yaml-of-pod&#34;&gt;SOLUTION: check YAML of Pod&lt;/h3&gt;
&lt;p&gt;Run the following command and check the Pod YAML looks as expected:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pod &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_NOTEBOOK_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;-0&amp;#34;&lt;/span&gt; --namespace &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_PROFILE_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt; -o yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;solution-check-logs-of-pod&#34;&gt;SOLUTION: check logs of Pod&lt;/h3&gt;
&lt;p&gt;Run the following command to get the logs from the Pod:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl logs &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_NOTEBOOK_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;-0&amp;#34;&lt;/span&gt; --namespace &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_PROFILE_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;issue-manually-delete-notebook&#34;&gt;ISSUE: manually delete notebook&lt;/h2&gt;
&lt;h3 id=&#34;solution-use-kubectl-to-delete-notebook-resource&#34;&gt;SOLUTION: use kubectl to delete Notebook resource&lt;/h3&gt;
&lt;p&gt;Run the following command to delete a Notebook resource manually:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl delete notebook &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_NOTEBOOK_NAME&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt; --namespace &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MY_PROFILE_NAMESPACE&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: API Reference</title>
      <link>/docs/components/notebooks/api-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/notebooks/api-reference/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
