<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenDataology â€“ Charmed OpenDataology</title>
    <link>/docs/distributions/charmed/</link>
    <description>Recent content in Charmed OpenDataology on OpenDataology</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/distributions/charmed/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Charmed OpenDataology deployment guide</title>
      <link>/docs/distributions/charmed/install-kubeflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/distributions/charmed/install-kubeflow/</guid>
      <description>
        
        
        &lt;p&gt;Get up and running with Charmed OpenDataology in half an hour or less. This guide outlines the steps you need to install and deploy OpenDataology with &lt;a href=&#34;https://charmed-OpenDataology.io/docs&#34;&gt;Charmed Operators&lt;/a&gt; and &lt;a href=&#34;https://juju.is/docs/kubernetes&#34;&gt;Juju&lt;/a&gt; on any conformant Kubernetes, including &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/aks/&#34;&gt;Azure Kubernetes Service (AKS)&lt;/a&gt;, &lt;a href=&#34;https://docs.aws.amazon.com/eks/index.html&#34;&gt;Amazon Elastic Kubernetes Service (EKS)&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/&#34;&gt;Google Kubernetes Engine (GKE)&lt;/a&gt;, &lt;a href=&#34;https://docs.openshift.com&#34;&gt;OpenShift&lt;/a&gt;, and any &lt;a href=&#34;https://kubernetes.io/docs/reference/setup-tools/kubeadm/&#34;&gt;kubeadm&lt;/a&gt;-deployed cluster (provided that you have access to it via &lt;code&gt;kubectl&lt;/code&gt;).&lt;/p&gt;
&lt;h4 id=&#34;1-install-the-juju-client&#34;&gt;1. Install the Juju client&lt;/h4&gt;
&lt;p&gt;On Linux, install &lt;code&gt;juju&lt;/code&gt; via &lt;a href=&#34;https://snapcraft.io/docs/installing-snapd&#34;&gt;snap&lt;/a&gt; with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;snap install juju --classic
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you use macOS, you can use &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; and type &lt;code&gt;brew install juju&lt;/code&gt; in the command line. For Windows, download the Windows &lt;a href=&#34;https://launchpad.net/juju/2.8/2.8.5/+download/juju-setup-2.8.5-signed.exe&#34;&gt;installer for Juju&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;2-connect-juju-to-your-kubernetes-cluster&#34;&gt;2. Connect Juju to your Kubernetes cluster&lt;/h4&gt;
&lt;p&gt;To operate workloads in your Kubernetes cluster with Juju, you have to add the cluster to the list of &lt;em&gt;clouds&lt;/em&gt; in Juju via the &lt;code&gt;add-k8s&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;If your Kubernetes config file is in the default location (such as &lt;code&gt;~/.kube/config&lt;/code&gt; on Linux) and you only have one cluster, you can simply run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;juju add-k8s myk8s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your kubectl config file contains multiple clusters, you can specify the appropriate one by name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;juju add-k8s myk8s --cluster-name&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;foo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, to use a different config file, you can set the &lt;code&gt;KUBECONFIG&lt;/code&gt; environment variable to point to the relevant file. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;path/to/file juju add-k8s myk8s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more details, go to the &lt;a href=&#34;https://juju.is/docs/clouds&#34;&gt;official Juju documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;3-create-a-controller&#34;&gt;3. Create a controller&lt;/h4&gt;
&lt;p&gt;To operate workloads on your Kubernetes cluster, Juju uses controllers. You can create a controller with the  &lt;code&gt;bootstrap&lt;/code&gt;  command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;juju bootstrap myk8s my-controller
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command will create a couple of pods under the &lt;code&gt;my-controller&lt;/code&gt; namespace. You can see your controllers with the &lt;code&gt;juju controllers&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;You can read more about controllers in the &lt;a href=&#34;https://juju.is/docs/creating-a-controller&#34;&gt;Juju documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;4-create-a-model&#34;&gt;4. Create a model&lt;/h4&gt;
&lt;p&gt;A model in Juju is a blank canvas where your operators will be deployed, and it holds a 1:1 relationship with a Kubernetes namespace.&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;add-model&lt;/code&gt; command, create a new model and name it &lt;code&gt;OpenDataology&lt;/code&gt; (which will then also create a Kubernetes namespace of the same name):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;juju add-model OpenDataology
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can list your models with the &lt;code&gt;juju models&lt;/code&gt; command.&lt;/p&gt;
&lt;h4 id=&#34;5-deploy-opendataology&#34;&gt;5. Deploy OpenDataology&lt;/h4&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;


    To deploy the full OpenDataology bundle, you&amp;rsquo;ll need at least 50Gb available of disk, 14Gb of RAM, and 2 CPUs available in your machine/VM.
If you have fewer resources, deploy OpenDataology-lite.

&lt;/div&gt;

&lt;p&gt;Once you have a model, you can simply &lt;code&gt;juju deploy&lt;/code&gt; any of the provided &lt;a href=&#34;https://charmed-OpenDataology.io/docs/operators-and-bundles&#34;&gt;OpenDataology bundles&lt;/a&gt; into your cluster. For the &lt;em&gt;OpenDataology lite&lt;/em&gt; bundle, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;juju deploy OpenDataology-lite --trust
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and your OpenDataology installation should begin!&lt;/p&gt;
&lt;p&gt;You can observe your OpenDataology deployment getting spun-up with the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch -c juju status --color
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;6-set-url-in-authentication-methods&#34;&gt;6. Set URL in authentication methods&lt;/h4&gt;
&lt;p&gt;Finally, you need to enable your OpenDataology dashboard access. Provide the dashboard&amp;rsquo;s public URL to dex-auth and oidc-gatekeeper as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;juju config dex-auth public-url&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;http://&amp;lt;URL&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;juju config oidc-gatekeeper public-url&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;http://&amp;lt;URL&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where in place of &lt;code&gt;&amp;lt;URL&amp;gt;&lt;/code&gt; you should use the hostname that the OpenDataology dashboard responds to.&lt;/p&gt;
&lt;p&gt;Currently, in order to setup OpenDataology with Istio correctly when RBAC is enabled, you need to provide the &lt;code&gt;istio-ingressgateway&lt;/code&gt; operator access to Kubernetes resources. The following command will create the appropriate role:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl patch role -n OpenDataology istio-ingressgateway-operator -p &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{&amp;#34;apiVersion&amp;#34;:&amp;#34;rbac.authorization.k8s.io/v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Role&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;name&amp;#34;:&amp;#34;istio-ingressgateway-operator&amp;#34;},&amp;#34;rules&amp;#34;:[{&amp;#34;apiGroups&amp;#34;:[&amp;#34;*&amp;#34;],&amp;#34;resources&amp;#34;:[&amp;#34;*&amp;#34;],&amp;#34;verbs&amp;#34;:[&amp;#34;*&amp;#34;]}]}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;more-documentation&#34;&gt;More documentation&lt;/h4&gt;
&lt;p&gt;For more documentation, visit the &lt;a href=&#34;https://charmed-OpenDataology.io/docs&#34;&gt;Charmed OpenDataology website&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;having-issues&#34;&gt;Having issues?&lt;/h4&gt;
&lt;p&gt;If you have any issues or questions, feel free to create a GitHub issue &lt;a href=&#34;https://github.com/canonical/bundle-OpenDataology/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;need-247-support&#34;&gt;Need 24/7 support?&lt;/h4&gt;
&lt;p&gt;You can get 24/7 support, expert professional services and managed service backed by an SLA from Canonical, the team behind Charmed OpenDataology. &lt;a href=&#34;https://charmed-OpenDataology.io/#get-in-touch&#34;&gt;Contact us&lt;/a&gt; now to learn more.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
